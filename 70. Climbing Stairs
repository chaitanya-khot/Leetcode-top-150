class Solution:
    def climbStairs(self, n: int) -> int:
        one, two = 1, 1

        for i in range (n-1):
            temp = one
            one = one + two
            two = temp
        return one
        
First visualised the problem using decision trees.
        
Intuition:
Using Bottom up Approach -> Recursion + Memorization.

Approach:
Storing the values of overlapping sub - problems in a vector.

Complexity:
Time complexity:
O(n) -> As we are visiting all values of n atleast 1 time.

Space complexity:
O(n) + O(n) - > (Recursive calls + Array of size n)
